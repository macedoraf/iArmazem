plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'br.com.ion'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    gradlePluginPortal()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    maven { url = uri("https://repo.papermc.io/repository/maven-public/") }

    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation(platform("com.intellectualsites.bom:bom-newest:1.37"))

    compileOnly "org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT"
    compileOnly "com.github.MilkBowl:VaultAPI:1.7.1"
    compileOnly("com.intellectualsites.plotsquared:plotsquared-core")
    compileOnly("com.intellectualsites.plotsquared:plotsquared-bukkit")
    shadow 'com.zaxxer:HikariCP:5.0.1'
}

artifacts {
    archives shadowJar
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    project.configurations.shadow.setTransitive(true);
    configurations = [project.configurations.shadow]
}